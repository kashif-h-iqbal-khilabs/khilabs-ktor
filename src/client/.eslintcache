[{"/Users/kashif-netcore/dev/code/khilabs/src/client/src/App.tsx":"1","/Users/kashif-netcore/dev/code/khilabs-ktor/src/client/src/App.tsx":"2","/Users/kashif-netcore/dev/code/khilabs-ktor/src/client/src/fileUpload.jsx":"3","/Users/kashif-netcore/dev/code/khilabs-ktor/src/client/src/screens/login.screen.tsx":"4","/Users/kashif-netcore/dev/code/khilabs-ktor/src/client/src/store/authentication/index.ts":"5"},{"size":713,"mtime":1606954114809,"results":"6","hashOfConfig":"7"},{"size":355,"mtime":1607466727991,"results":"8","hashOfConfig":"9"},{"size":2429,"mtime":1607296049888,"results":"10","hashOfConfig":"9"},{"size":5640,"mtime":1607467678069,"results":"11","hashOfConfig":"9"},{"size":419,"mtime":1607466207000,"results":"12","hashOfConfig":"9"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"13f0pja",{"filePath":"15","messages":"16","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"a7ux88",{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kashif-netcore/dev/code/khilabs/src/client/src/App.tsx",["24"],"/Users/kashif-netcore/dev/code/khilabs-ktor/src/client/src/App.tsx",["25"],"/Users/kashif-netcore/dev/code/khilabs-ktor/src/client/src/fileUpload.jsx",["26","27","28"],"/Users/kashif-netcore/dev/code/khilabs-ktor/src/client/src/screens/login.screen.tsx",["29"],"import React, {useEffect, useState} from \"react\";\nimport { RouteComponentProps } from '@reach/router';\nimport {\n    Button,\n    TextField,\n    Grid,\n    Paper,\n    AppBar,\n    Typography,\n    Toolbar,\n    Link,\n} from \"@material-ui/core\";\nimport './style.css';\n\ninterface LoginScreenProps extends RouteComponentProps {}\n\nexport const LoginScreen = (props: LoginScreenProps) =>  {\n\n        const initialState = {\n            username: '',\n            password: ''\n        }\n\n      useEffect(() =>{\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ username: 'kashif', password: 'password' })\n          };\n\n                // POST request\n        fetch('/login', requestOptions)\n           .then(response => response.status === 200 ? response.json() : { authenticated: 'false' })\n           .then(data => console.log('data response', data))\n        \n      }, [])\n\n  \n\n    const [state, setState] = useState(initialState)\n\n    const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n        setState({...state, [evt.target.name] : evt.target.value})\n    }\n\n\n    const handleSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\n        evt.preventDefault();\n        // make backend call here -> probably a thunk\n        if (state.username === 'admin@littech.in' && state.password === 'secret') {\n            alert('login in')\n        } else {\n            alert('Incorrect Credntials!');\n        }\n    }\n    \n    return (\n            <div>\n                <AppBar position=\"static\" color=\"primary\">\n                    <Toolbar>\n                        <Grid container justify=\"center\" wrap=\"wrap\">\n                            <Grid item>\n                                <Typography variant=\"h6\">KHILABS</Typography>\n                            </Grid>\n                        </Grid>\n                    </Toolbar>\n                </AppBar>\n                <Grid container spacing={0} justify=\"center\" direction=\"row\">\n                    <Grid item>\n                        <Grid\n                            container\n                            direction=\"column\"\n                            justify=\"center\"\n                            spacing={2}\n                            className=\"login-form\"\n                        >\n                            <Paper\n                                variant=\"elevation\"\n                                elevation={2}\n                                className=\"login-background\"\n                            >\n                                <Grid item>\n                                    <Typography component=\"h1\" variant=\"h5\">\n                                        Log in\n                                    </Typography>\n                                </Grid>\n                                <Grid item>\n                                    <form onSubmit={handleSubmit}>\n                                        <Grid container direction=\"column\" spacing={2}>\n                                            <Grid item>\n                                                <TextField\n                                                    type=\"email\"\n                                                    placeholder=\"Email\"\n                                                    fullWidth\n                                                    name=\"username\"\n                                                    variant=\"outlined\"\n                                                    value={state.username}\n                                                    onChange={handleChange}\n                                                    required\n                                                    autoFocus\n                                                />\n                                            </Grid>\n                                            <Grid item>\n                                                <TextField\n                                                    type=\"password\"\n                                                    placeholder=\"Password\"\n                                                    fullWidth\n                                                    name=\"password\"\n                                                    variant=\"outlined\"\n                                                    value={state.password}\n                                                    onChange={handleChange}\n                                                    required\n                                                />\n                                            </Grid>\n                                            <Grid item>\n                                                <Button\n                                                    variant=\"contained\"\n                                                    color=\"primary\"\n                                                    type=\"submit\"\n                                                    className=\"button-block\"\n                                                >\n                                                    Submit\n                                                </Button>\n                                            </Grid>\n                                        </Grid>\n                                    </form>\n                                </Grid>\n                                <Grid item>                            \n                                </Grid>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n}","/Users/kashif-netcore/dev/code/khilabs-ktor/src/client/src/store/authentication/index.ts",[],{"ruleId":"30","severity":1,"message":"31","line":18,"column":6,"nodeType":"32","endLine":18,"endColumn":8,"suggestions":"33"},{"ruleId":"34","severity":2,"message":"35","line":6,"column":6,"nodeType":"36","endLine":6,"endColumn":14},{"ruleId":"37","severity":1,"message":"38","line":1,"column":17,"nodeType":"39","messageId":"40","endLine":1,"endColumn":26},{"ruleId":"37","severity":1,"message":"41","line":1,"column":28,"nodeType":"39","messageId":"40","endLine":1,"endColumn":36},{"ruleId":"37","severity":1,"message":"42","line":2,"column":8,"nodeType":"39","messageId":"40","endLine":2,"endColumn":13},{"ruleId":"43","severity":1,"message":"44","line":11,"column":5,"nodeType":"39","messageId":"40","endLine":11,"endColumn":9},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'requestOptions'. Either include it or remove the dependency array.","ArrayExpression",["45"],"react/jsx-no-undef","'Provider' is not defined.","JSXIdentifier","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'axios' is defined but never used.","@typescript-eslint/no-unused-vars","'Link' is defined but never used.",{"desc":"46","fix":"47"},"Update the dependencies array to be: [requestOptions]",{"range":"48","text":"49"},[549,551],"[requestOptions]"]